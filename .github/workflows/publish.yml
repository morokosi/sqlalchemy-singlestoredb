# This workflow will upload a Python Package using Twine when a release is created
# For more information see: https://help.github.com/en/actions/language-and-framework-guides/using-python-with-github-actions#publishing-to-package-registries

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Publish packages

on:
  release:
    types: [published]
  workflow_dispatch:
    inputs:
      publish_pypi:
        description: "Publish PyPI packages on success?"
        required: true
        type: boolean
        default: true
      publish_anaconda:
        description: "Publish Anaconda packages on success?"
        required: true
        type: boolean
        default: true
      build_number:
        description: "Package build number"
        required: true
        type: string
        default: 0

jobs:
  publish:

    runs-on: ubuntu-latest

    services:
      singlestore:
        image: singlestore/cluster-in-a-box:latest
        ports:
          - 3306:3306
          - 8080:8080
        env:
          LICENSE_KEY: ${{ secrets.SINGLESTORE_LICENSE }}
          ROOT_PASSWORD: "root"
          START_AFTER_INIT: "Y"

    steps:
      - uses: actions/checkout@v2

      - name: Set up Python 3.10
        uses: actions/setup-python@v2
        with:
          python-version: "3.10"
          cache: "pip"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install -r test-requirements.txt

      - name: Build PyPI package
        run: |
          python -m pip install --upgrade pip
          pip install build twine
          python -m build
          twine check dist/*

      - name: Build Conda package
        run: |
          # $CONDA is an environment variable pointing to the root of the miniconda directory
          echo $CONDA/bin >> $GITHUB_PATH
          conda update conda
          conda install conda-build anaconda-client conda-verify
          mkdir artifacts
          cd conda.recipe
          conda build -c singlestore -c conda-forge --no-anaconda-upload --output-folder ../artifacts .
        env:
          SINGLESTOREDB_URL: "root:root@127.0.0.1:3306"

      - name: Publish PyPI package
        if: ${{ (github.event_name == 'release' && github.event.release.action) == 'published' || github.event.inputs.publish_pypi == 'true' }}
        env:
          TWINE_USERNAME: __token__
          TWINE_PASSWORD: "${{ secrets.PYPI_TOKEN }}"
        run: |
          twine upload dist/*

      - name: Publish Conda package
        if: ${{ (github.event_name == 'release' && github.event.release.action) == 'published' || github.event.inputs.publish_anaconda == 'true' }}
        env:
          PACKAGE_BUILD_NUMBER: ${{ github.event.inputs.build_number }}
        run: |
          echo $CONDA/bin >> $GITHUB_PATH
          anaconda -t "${{ secrets.ANACONDA_TOKEN }}" upload --no-progress --user SingleStore --label main artifacts/noarch/sqlalchemy-singlestoredb-*.tar.bz2
